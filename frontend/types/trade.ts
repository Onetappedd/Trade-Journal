// Base fields common to all trades
export interface BaseTrade {
  id?: string;
  symbol: string; // Or underlyingSymbol, cryptoPair depending on context
  tradeDate: string;
  tradeTime: string; // HH:MM
  direction: string; // 'Long' | 'Short' | 'Buy to Open' | 'Sell to Open' | 'Buy' | 'Sell'
  entryPrice: number;
  quantity: number; // shares, contracts, coins
  exitPrice?: number; // Optional for open trades
  pnl?: number; // Optional for open trades
  rr?: number; // Optional for open trades
  commissionFees?: number;
  // Documentation fields
  psychologicalState?: string;
  preTradePlan?: string;
  postTradeReflection?: string;
  customTags?: string[];
}

export interface StockTradeDetails {
  assetType: 'Common Stock';
  // No additional unique fields beyond BaseTrade
}

export interface OptionsTradeDetails {
  assetType: 'Options Contract';
  strikePrice: number;
  expirationDate: string; // YYYY-MM-DD
  callPut: 'Call' | 'Put';
  underlyingPriceAtEntry?: number;
  underlyingPriceAtExit?: number;
}

export interface FuturesTradeDetails {
  assetType: 'Futures Contract';
  contractSymbol: string; // e.g., ES=F
}

export interface CryptoTradeDetails {
  assetType: 'Cryptocurrency';
  cryptoPair: string; // e.g., BTC/USD
  exchange?: string;
}

export type Trade = BaseTrade & (
  StockTradeDetails |
  OptionsTradeDetails |
  FuturesTradeDetails |
  CryptoTradeDetails
);

export type TradeFormInput = Trade; // Or Omit<Trade, 'id'> if ID is generated by backend
